{"version":3,"sources":["components/images/imageGallery/Image.module.css","components/images/searchbar/Searchbar.js","services/images-api.js","components/images/loader/Loader.js","components/images/error/Error.js","components/images/imageGallery/ImageGalleryItem.js","components/images/modal/Modal.js","components/images/button/Button.js","components/images/imageGallery/ImageGallery.js","components/App.js","index.js"],"names":["module","exports","Searchbar","state","imageName","handleNameChange","e","target","currentTarget","value","setState","toLowerCase","handleSubmit","preventDefault","trim","props","onFormSubmit","toast","this","s","SearchForm","SearchFormButton","SearchFormButtonLabel","SearchFormInput","className","onSubmit","type","name","autoComplete","autoFocus","placeholder","onChange","Component","fetchImages","page","url","fetch","then","response","ok","json","Promise","reject","Error","data","hits","propTypes","PropTypes","string","isRequired","number","Loader","color","height","width","timeout","message","role","ImageGalleryItem","largeImageURL","webformatURL","tags","onOpenLargeImg","ImageGalleryItemIMG","ImageGalleryItemImage","onClick","src","alt","modalRoot","document","querySelector","Modal","handleKeyDown","code","onToggleModal","handleBackdropClick","window","addEventListener","removeEventListener","Overlay","createPortal","children","Button","onLoadMoreClick","ButtonContainer","ImageGallery","images","status","error","showModal","imagesFetchApi","prevState","catch","toggleModal","openLargeImg","prevProps","scrollTo","top","documentElement","scrollHeight","behavior","ref","map","id","length","App","handleFormSubmit","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c964cf71.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"Image_App__oD1sT\",\"Searchbar\":\"Image_Searchbar__s3EvM\",\"SearchForm\":\"Image_SearchForm__3WVof\",\"SearchFormButton\":\"Image_SearchFormButton__W-HD0\",\"SearchFormButtonLabel\":\"Image_SearchFormButtonLabel__1Bv6h\",\"SearchFormInput\":\"Image_SearchFormInput__2EtKh\",\"ImageGallery\":\"Image_ImageGallery__1Sy-D\",\"ImageGalleryItemIMG\":\"Image_ImageGalleryItemIMG__DUVzb\",\"ImageGalleryItemImage\":\"Image_ImageGalleryItemImage__ZnyDU\",\"Overlay\":\"Image_Overlay__3ajmJ\",\"Modal\":\"Image_Modal__3lsm1\",\"ButtonContainer\":\"Image_ButtonContainer__50mgK\",\"Button\":\"Image_Button__3XpPd\",\"Loader\":\"Image_Loader__2poCC\"};","import React, { Component } from 'react';\nimport { toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\nimport s from '../imageGallery/Image.module.css';\n\nclass Searchbar extends Component {\n  state = {\n    imageName: '',\n  };\n\n  handleNameChange = e => {\n    const target = e.currentTarget.value;\n\n    this.setState({\n      imageName: target.toLowerCase(),\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    const { imageName } = this.state;\n\n    if (imageName.trim() === '') {\n      toast('Enter name of image, please!');\n      return;\n    }\n\n    this.props.onFormSubmit(imageName.trim());\n\n    this.setState({\n      imageName: '',\n    });\n  };\n\n  render() {\n    const { imageName } = this.state;\n    const {\n      Searchbar,\n      SearchForm,\n      SearchFormButton,\n      SearchFormButtonLabel,\n      SearchFormInput,\n    } = s;\n\n    return (\n      <header className={Searchbar}>\n        <form className={SearchForm} onSubmit={this.handleSubmit}>\n          <button type=\"submit\" className={SearchFormButton}>\n            <span className={SearchFormButtonLabel}>Search</span>\n          </button>\n\n          <input\n            className={SearchFormInput}\n            type=\"text\"\n            name=\"imageName\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            value={imageName}\n            onChange={this.handleNameChange}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nSearchbar.propTypes = {\n  onFormSubmit: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","import PropTypes from 'prop-types';\n\nfunction fetchImages(name, page) {\n  const KEY = '22204382-c38be1b1e7fd4cceb3bc7515f';\n  const BASE_URL = 'https://pixabay.com/api';\n  const perPage = 12;\n  const url = `${BASE_URL}/?image_type=photo&orientation=horizontal&q=${name}&page=${page}&per_page=${perPage}&key=${KEY}`;\n\n  return fetch(url)\n    .then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n\n      return Promise.reject(new Error(`There is no image with name ${name}`));\n    })\n    .then(data => data.hits);\n}\n\nfetchImages.propTypes = {\n  name: PropTypes.string.isRequired,\n  page: PropTypes.number.isRequired,\n};\n\nexport default fetchImages;\n","import LoaderImg from 'react-loader-spinner';\nimport s from '../imageGallery/Image.module.css';\n\nfunction Loader() {\n  return (\n    <div className={s.Loader}>\n      <LoaderImg\n        type=\"Puff\"\n        color=\"#00BFFF\"\n        height={100}\n        width={100}\n        timeout={3000}\n      />\n    </div>\n  );\n}\n\nexport default Loader;\n","import PropTypes from 'prop-types';\n\nfunction Error(props) {\n  const { message } = props;\n\n  return <p role=\"alert\">{message}</p>;\n}\n\nError.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Error;\n","import PropTypes from 'prop-types';\nimport s from './Image.module.css';\n\nfunction ImageGalleryItem(props) {\n  const { largeImageURL, webformatURL, tags, onOpenLargeImg } = props;\n  const { ImageGalleryItemIMG, ImageGalleryItemImage } = s;\n\n  return (\n    <li className={ImageGalleryItemIMG}>\n      <img\n        onClick={() => onOpenLargeImg(largeImageURL)}\n        src={webformatURL}\n        alt={tags}\n        className={ImageGalleryItemImage}\n      />\n    </li>\n  );\n}\n\nImageGalleryItem.propTypes = {\n  largeImageURL: PropTypes.string.isRequired,\n  webformatURL: PropTypes.string.isRequired,\n  tags: PropTypes.string.isRequired,\n  onOpenLargeImg: PropTypes.func.isRequired,\n};\n\nexport default ImageGalleryItem;\n","import React, { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport s from '../imageGallery/Image.module.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nclass Modal extends Component {\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      this.props.onToggleModal();\n    }\n  };\n\n  handleBackdropClick = e => {\n    if (e.currentTarget === e.target) {\n      this.props.onToggleModal();\n    }\n  };\n\n  render() {\n    const { Overlay, Modal } = s;\n\n    return createPortal(\n      <div className={Overlay} onClick={this.handleBackdropClick}>\n        <div className={Modal}>{this.props.children}</div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\n\nModal.propTypes = {\n  onToggleModal: PropTypes.func.isRequired,\n};\n\nexport default Modal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from '../imageGallery/Image.module.css';\n\nfunction Button(props) {\n  const { onLoadMoreClick } = props;\n  const { ButtonContainer, Button } = s;\n\n  return (\n    <div className={ButtonContainer}>\n      <button className={Button} onClick={onLoadMoreClick}>\n        Load more\n      </button>\n    </div>\n  );\n}\n\nButton.propTypes = {\n  onLoadMoreClick: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Image.module.css';\n\nimport fetchImages from '../../../services/images-api';\nimport Loader from '../loader/Loader';\nimport Error from '../error/Error';\nimport ImageGalleryItem from './ImageGalleryItem';\nimport Modal from '../modal/Modal';\nimport Button from '../button/Button';\n\nclass ImageGallery extends Component {\n  state = {\n    images: [],\n    page: 1,\n    status: 'idle',\n    error: null,\n    showModal: false,\n    largeImageURL: null,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.imageName !== this.props.imageName) {\n      this.setState({\n        page: 1,\n        images: [],\n        error: null,\n        status: 'pending',\n      });\n\n      this.imagesFetchApi();\n    }\n\n    if (prevState.page !== this.state.page) {\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: 'smooth',\n      });\n    }\n  }\n\n  imagesFetchApi = () => {\n    fetchImages(this.props.imageName, this.state.page)\n      .then(images => {\n        this.setState(prevState => ({\n          images: [...prevState.images, ...images],\n          page: prevState.page + 1,\n          status: 'resolved',\n        }));\n      })\n      .catch(error =>\n        this.setState({\n          error,\n          status: 'rejected',\n        }),\n      );\n  };\n\n  toggleModal = () => {\n    this.setState(prevState => ({\n      showModal: !prevState.showModal,\n    }));\n  };\n\n  openLargeImg = largeImageURL => {\n    this.setState({\n      largeImageURL,\n    });\n\n    this.toggleModal();\n  };\n\n  render() {\n    const { images, error, status } = this.state;\n    const { ImageGallery } = s;\n\n    if (status === 'idle') {\n      return <div> </div>;\n    }\n\n    if (status === 'pending') {\n      return <Loader />;\n    }\n\n    if (status === 'rejected') {\n      return <Error message={error.message} />;\n    }\n\n    if (status === 'resolved') {\n      return (\n        <div>\n          <ul ref={this.ref} className={ImageGallery}>\n            {images.map(({ id, webformatURL, tags, largeImageURL }) => (\n              <ImageGalleryItem\n                key={id}\n                webformatURL={webformatURL}\n                tags={tags}\n                largeImageURL={largeImageURL}\n                onOpenLargeImg={this.openLargeImg}\n              />\n            ))}\n          </ul>\n\n          {images.length !== 0 && (\n            <Button onLoadMoreClick={this.imagesFetchApi} />\n          )}\n\n          {this.state.showModal && (\n            <Modal onToggleModal={this.toggleModal}>\n              <img src={this.state.largeImageURL} alt=\"\" />\n            </Modal>\n          )}\n        </div>\n      );\n    }\n  }\n}\n\nImageGallery.propTypes = {\n  images: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }),\n  ),\n  imageName: PropTypes.string.isRequired,\n};\n\nexport default ImageGallery;\n","import React, { Component } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport Searchbar from './images/searchbar/Searchbar';\nimport ImageGallery from './images/imageGallery/ImageGallery';\n\nclass App extends Component {\n  state = {\n    imageName: '',\n  };\n\n  handleFormSubmit = imageName => {\n    this.setState({\n      imageName,\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <Searchbar onFormSubmit={this.handleFormSubmit} />\n        <ImageGallery imageName={this.state.imageName} />\n\n        <ToastContainer autoClose={3000} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}